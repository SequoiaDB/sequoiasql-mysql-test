drop view if exists v1;
drop table if exists t1,t4;
create table t1 (
a varchar(30), b varchar(30), primary key(a), key(b)
) engine=SEQUOIADB;
select distinct a from t1;
a
drop table t1;
create table t1(a int, key(a)) engine=SEQUOIADB;
insert into t1 values(1);
select a, count(a) from t1 group by a with rollup;
a	count(a)
1	1
NULL	1
drop table t1;
create table t1 (f1 int, f2 char(1), primary key(f1,f2)) engine=SEQUOIADB
stats_persistent=0;
insert into t1 values ( 1,"e"),(2,"a"),( 3,"c"),(4,"d");
alter table t1 drop primary key, add primary key (f2, f1);
drop table t1;
create table t1(pk int primary key) engine=SEQUOIADB;
create view v1 as select pk from t1 where pk < 20;
insert into t1 values (1), (2), (3), (4);
select distinct pk from v1;
pk
1
2
3
4
insert into t1 values (5), (6), (7);
select distinct pk from v1;
pk
1
2
3
4
5
6
7
drop view v1;
drop table t1;
End of 5.1 tests
#
# Bug#12540545 61101: ASSERTION FAILURE IN THREAD 1256741184 IN
# FILE /BUILDDIR/BUILD/BUILD/MYSQ
#
CREATE TABLE t1 (a CHAR(1), b CHAR(1), PRIMARY KEY (a,b)) ENGINE=SEQUOIADB;
INSERT INTO t1 VALUES ('a', 'b'), ('c', 'd');
SELECT COUNT(DISTINCT a) FROM t1 WHERE b = 'b';
COUNT(DISTINCT a)
1
DROP TABLE t1;
CREATE TABLE t1 (a CHAR(1) NOT NULL, b CHAR(1) NOT NULL, UNIQUE KEY (a,b))
ENGINE=SEQUOIADB;
INSERT INTO t1 VALUES ('a', 'b'), ('c', 'd');
SELECT COUNT(DISTINCT a) FROM t1 WHERE b = 'b';
COUNT(DISTINCT a)
1
DROP TABLE t1;
End of 5.5 tests
#
# Bug#17909656 - WRONG RESULTS FOR A SIMPLE QUERY WITH GROUP BY
#
CREATE TABLE t0 (
i1 INTEGER NOT NULL
);
INSERT INTO t0 VALUES (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),
(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),
(21),(22),(23),(24),(25),(26),(27),(28),(29),(30);
CREATE TABLE t1 (
c1 CHAR(1) NOT NULL,
i1 INTEGER NOT NULL,
i2 INTEGER NOT NULL,
UNIQUE KEY k1 (c1,i2)
) ENGINE=SEQUOIADB;
INSERT INTO t1 SELECT 'A',i1,i1 FROM t0;
INSERT INTO t1 SELECT 'B',i1,i1 FROM t0;
INSERT INTO t1 SELECT 'C',i1,i1 FROM t0;
INSERT INTO t1 SELECT 'D',i1,i1 FROM t0;
INSERT INTO t1 SELECT 'E',i1,i1 FROM t0;
INSERT INTO t1 SELECT 'F',i1,i1 FROM t0;
CREATE TABLE t2 (
c1 CHAR(1) NOT NULL,
i1 INTEGER NOT NULL,
i2 INTEGER NOT NULL,
UNIQUE KEY k2 (c1,i1,i2)
) ENGINE=SEQUOIADB;
INSERT INTO t2 SELECT 'A',i1,i1 FROM t0;
INSERT INTO t2 SELECT 'B',i1,i1 FROM t0;
INSERT INTO t2 SELECT 'C',i1,i1 FROM t0;
INSERT INTO t2 SELECT 'D',i1,i1 FROM t0;
INSERT INTO t2 SELECT 'E',i1,i1 FROM t0;
INSERT INTO t2 SELECT 'F',i1,i1 FROM t0;
ANALYZE TABLE t1;
ANALYZE TABLE t2;
set optimizer_trace_max_mem_size=1048576;
set @@session.optimizer_trace='enabled=on';
set end_markers_in_json=on;
SELECT c1, max(i2) FROM t1 WHERE (c1 = 'C' AND i2 = 17) OR ( c1 = 'F')
GROUP BY c1;
c1	max(i2)
C	17
F	30
SELECT c1, max(i2) FROM t1 WHERE (c1 = 'C' OR ( c1 = 'F' AND i2 = 17))
GROUP BY c1;
c1	max(i2)
C	30
F	17
SELECT c1, max(i2) FROM t1 WHERE (c1 = 'C' OR c1 = 'F' ) AND ( i2 = 17 )
GROUP BY c1;
c1	max(i2)
C	17
F	17
SELECT c1, max(i2) FROM t1 
WHERE ((c1 = 'C' AND (i2 = 40 OR i2 = 30)) OR ( c1 = 'F' AND (i2 = 40 )))
GROUP BY c1;
c1	max(i2)
C	30
SELECT c1, i1, max(i2) FROM t2
WHERE (c1 = 'C' OR ( c1 = 'F' AND i1 < 35)) AND ( i2 = 17 )
GROUP BY c1,i1;
c1	i1	max(i2)
C	17	17
F	17	17
SELECT c1, i1, max(i2) FROM t2 
WHERE (((c1 = 'C' AND i1 < 40) OR ( c1 = 'F' AND i1 < 35)) AND ( i2 = 17 ))
GROUP BY c1,i1;
c1	i1	max(i2)
C	17	17
F	17	17
SELECT c1, i1, max(i2) FROM t2 
WHERE ((c1 = 'C' AND i1 < 40) OR ( c1 = 'F' AND i1 < 35) OR ( i2 = 17 ))
GROUP BY c1,i1;
c1	i1	max(i2)
A	17	17
B	17	17
C	1	1
C	2	2
C	3	3
C	4	4
C	5	5
C	6	6
C	7	7
C	8	8
C	9	9
C	10	10
C	11	11
C	12	12
C	13	13
C	14	14
C	15	15
C	16	16
C	17	17
C	18	18
C	19	19
C	20	20
C	21	21
C	22	22
C	23	23
C	24	24
C	25	25
C	26	26
C	27	27
C	28	28
C	29	29
C	30	30
D	17	17
E	17	17
F	1	1
F	2	2
F	3	3
F	4	4
F	5	5
F	6	6
F	7	7
F	8	8
F	9	9
F	10	10
F	11	11
F	12	12
F	13	13
F	14	14
F	15	15
F	16	16
F	17	17
F	18	18
F	19	19
F	20	20
F	21	21
F	22	22
F	23	23
F	24	24
F	25	25
F	26	26
F	27	27
F	28	28
F	29	29
F	30	30
SET optimizer_trace_max_mem_size=DEFAULT;
SET optimizer_trace=DEFAULT;
SET end_markers_in_json=DEFAULT;
DROP TABLE t0,t1,t2;
#
# Bug #21749123: SELECT DISTINCT, WRONG RESULTS COMBINED WITH
#                USE_INDEX_EXTENSIONS=OFF
#
#
# Bug #24671968: WHEN THE OPTIMISER IS USING INDEX FOR GROUP-BY IT OFTEN
#                OFTEN GIVES WRONG RESULTS
#
CREATE TABLE t1 (
id int NOT NULL,
c1 int NOT NULL,
c2 int,
PRIMARY KEY(id),
INDEX c1_c2_idx(c1, c2));
INSERT INTO t1 (id, c1, c2) VALUES (1,1,1), (2,2,2), (10,10,1), (11,10,8),
(12,10,1), (13,10,2);
SET optimizer_trace="enabled=on";
SELECT DISTINCT c1
FROM t1
WHERE EXISTS (SELECT *
FROM DUAL
WHERE (c2 = 2));
c1
2
10
SET optimizer_trace="enabled=off";
SELECT DISTINCT c1
FROM t1
WHERE 1 IN (2,
(SELECT 1
FROM DUAL
WHERE (c2 = 2)),
3);
c1
2
10
SELECT DISTINCT c1
FROM t1
WHERE c2 = 2;
c1
2
10
SELECT DISTINCT c1
FROM t1 IGNORE INDEX (c1_c2_idx)
WHERE EXISTS (SELECT *
FROM DUAL
WHERE (c2 = 2));
c1
2
10
SELECT DISTINCT c1
FROM t1 IGNORE INDEX (c1_c2_idx)
WHERE 1 IN (2,
(SELECT 1
FROM DUAL
WHERE (c2 = 2)),
3);
c1
2
10
DROP TABLE t1;
#
# Bug #26532061: SELECT DISTINCT WITH SECONDARY KEY FOR
#                'USING INDEX FOR GROUP-BY' BAD RESULTS
#
CREATE TABLE t1(
pk INT NOT NULL,
c1 CHAR(2),
c2 INT,
PRIMARY KEY(pk),
UNIQUE KEY ukey(c1, c2)
);
INSERT INTO t1(pk, c1, c2) VALUES (1,1,1),(2,2,2),(3,3,3),(4,5,4);
SET @a:=5;
INSERT IGNORE INTo t1(pk, c1, c2)
SELECT (@a:=@a+1),@a,@a FROM t1, t1 t2,t1 t3, t1 t4;
SELECT * FROM t1 WHERE pk = 1 OR pk = 231;
pk	c1	c2
1	1	1
231	23	231
SELECT DISTINCT c1
FROM t1 FORCE INDEX(ukey)
WHERE pk IN (1,231) and c1 IS NOT NULL;
c1
1
23
SELECT DISTINCT c1
FROM t1 IGNORE INDEX(ukey)
WHERE pk IN (1,231) and c1 IS NOT NULL;
c1
1
23
DROP TABLE t1;
#
# Bug #25989915: LOOSE INDEX SCANS RETURNING WRONG RESULT
#
