#check basic query to sequoiadb
#Case 13098#Case 13099#Case 13100#Case 13101#Case 13102#Case 13103#Case 13104#Case 13105
#Case 13106#Case 13107#Case 13108#Case 13109#Case 13110#Case 13111#Case 13112#Case 13113
#Case 13114#Case 13115#Case 13116#Case 13117
--source include/have_sequoiadb.inc

--disable_warnings
DROP TABLE IF EXISTS t1, t2;
--enable_warnings

#
# INSERT INTO ... SELECT
#
CREATE TABLE t1 (a TINYINT UNSIGNED NOT NULL, b INT UNSIGNED NOT NULL);
CREATE TABLE t2 (a TINYINT UNSIGNED NOT NULL, b INT UNSIGNED NOT NULL);
INSERT INTO t1 (a,b) VALUES (1,36),(8,11),(3,5),(6,9),(4,10),(9,1),(2,12),(7,18),(5,2),(10,0);
INSERT INTO t2 (a,b) VALUES (102,6),(99,5),(87,22),(79,9),(85,7),(101,5),(80,14),(100,1),(97,29),(98,19);
INSERT INTO t1 ( a, b ) SELECT MAX(a), MAX(b) FROM t2;
INSERT INTO t2 ( a, b ) SELECT MIN(a), MIN(b) FROM t1;
INSERT INTO t1 SELECT t2.a,t2.b FROM t2;
INSERT INTO t2 SELECT t1.a,t1.b FROM t1;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
UPDATE t1 SET b = 3 WHERE b>5;
UPDATE t2 SET b = 2 WHERE b>=0;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
DELETE FROM t1 WHERE a > 3;
DELETE FROM t2 WHERE a >= 0;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
# CREATE INDEX
CREATE INDEX a ON t1(a);
CREATE INDEX b ON t1(b);
CREATE INDEX a ON t2(a);
CREATE INDEX b ON t2(b);
INSERT INTO t1 (a,b) VALUES (1,36),(8,11),(3,5),(6,9),(4,10),(9,1),(2,12),(7,18),(5,2),(10,0);
INSERT INTO t2 (a,b) VALUES (102,6),(99,5),(87,22),(79,9),(85,7),(101,5),(80,14),(100,1),(97,29),(98,19);
INSERT INTO t1 ( a, b ) SELECT MAX(a), MAX(b) FROM t2;
INSERT INTO t2 ( a, b ) SELECT MIN(a), MIN(b) FROM t1;
INSERT INTO t1 SELECT t2.a,t2.b FROM t2;
INSERT INTO t2 SELECT t1.a,t1.b FROM t1;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
UPDATE t1 SET b = 3 WHERE b>5;
UPDATE t2 SET b = 2 WHERE b>=0;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
DELETE FROM t1 WHERE a > 3;
DELETE FROM t2 WHERE a >= 0;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
DROP TABLE t1,t2;

#
# UPDATE/DELETE WITH WHERE + ORDER BY + LIMIT
#
CREATE TABLE t1 (a INT, b VARCHAR(10));
INSERT INTO t1 VALUES (2,'abcd1e'),(5,'abcd2e'),(11,'helloworld'),(3,'1234567'),(10,'ccccc'),(12,'string'),(9,'word'),(8,'xxyyzz'),(1,'ABCD'),(6,'abcd'),(15,'ABCD1e'),(4,'ABCD2e');
# UPDATE
UPDATE t1 SET b = "updateb1" WHERE b = "abcd1e";
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb2" WHERE b <=> "abcd2e";
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb3" WHERE b < "abcd" ORDER BY b DESC;
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb4" WHERE b <= "ccccc";
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb5" WHERE b > "word";
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb6" WHERE b >= "updateb4" ORDER BY b LIMIT 2;
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb7" WHERE b BETWEEN "updateb1" AND "updateb4" ORDER BY a DESC LIMIT 4;
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb8" WHERE b IN ("word", "updateb5", "updateb6", "string");
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb9" WHERE b NOT IN ("updateb7", "helloworld");
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb10" WHERE b LIKE "updateb7%";
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb11" WHERE b REGEXP "updateb1";
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb12" WHERE b != "updateb11";
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb13" WHERE b IS NULL;
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb14" WHERE b IS NOT NULL;
--sorted_result
SELECT * FROM t1;
# DELETE
DELETE FROM t1;
INSERT INTO t1 VALUES (2,'abcd1e'),(5,'abcd2e'),(11,'helloworld'),(3,'1234567'),(10,'ccccc'),(12,'string'),(9,'word'),(8,'xxyyzz'),(1,'ABCD'),(6,'abcd'),(15,'ABCD1e'),(4,'ABCD2e'),(14,"test1"),(18,"abcde"),(15,"abcdef"),(13,"bcd"),(21,"bcde"),(17,"acdef");
DELETE FROM t1 WHERE b = "abcd1e";
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b <=> "abcd2e";
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b < "ABCD1e";
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b <= "abcd" ORDER BY b DESC LIMIT 2;
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b > "word";
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b >= "word";
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b BETWEEN "ccccc" AND "helloworld" ORDER BY b LIMIT 2;
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b LIKE "abcde%" ORDER BY a DESC LIMIT 1;
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b REGEXP "str";
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b IN ("bcd", "acdef");
--sorted_result
SELECT * FROM t1;
DELETE FROM t1  WHERE b != "test1";
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b IS NOT NULL;
--sorted_result
SELECT * FROM t1;
# CREATE INDEX
CREATE INDEX a ON t1(a);
CREATE INDEX b ON t1(b(5));
INSERT INTO t1 VALUES (2,'abcd1e'),(5,'abcd2e'),(11,'helloworld'),(3,'1234567'),(10,'ccccc'),(12,'string'),(9,'word'),(8,'xxyyzz'),(1,'ABCD'),(6,'abcd'),(15,'ABCD1e'),(4,'ABCD2e');
# UPDATE
UPDATE t1 SET b = "updateb1" WHERE b = "abcd1e";
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb2" WHERE b <=> "abcd2e";
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb3" WHERE b < "abcd" ORDER BY b DESC;
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb4" WHERE b <= "ccccc";
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb5" WHERE b > "word";
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb6" WHERE b >= "UPDATEb4" ORDER BY b LIMIT 2;
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb7" WHERE b BETWEEN "updateb1" AND "updateb4" ORDER BY a DESC LIMIT 4;
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb8" WHERE b IN ("word", "updateb5", "updateb6", "string");
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb9" WHERE b NOT IN ("updateb7", "helloworld");
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb10" WHERE b LIKE "updateb7%";
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb11" WHERE b REGEXP "updateb1";
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb12" WHERE b != "updateb11";
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb13" WHERE b IS NULL;
--sorted_result
SELECT * FROM t1;
UPDATE t1 SET b = "updateb14" WHERE b IS NOT NULL;
--sorted_result
SELECT * FROM t1;
# DELETE
DELETE FROM t1;
INSERT INTO t1 VALUES (2,'abcd1e'),(5,'abcd2e'),(11,'helloworld'),(3,'1234567'),(10,'ccccc'),(12,'string'),(9,'word'),(8,'xxyyzz'),(1,'ABCD'),(6,'abcd'),(15,'ABCD1e'),(4,'ABCD2e'),(14,"test1"),(18,"abcde"),(15,"abcdef"),(13,"bcd"),(21,"bcde"),(17,"acdef");
DELETE FROM t1 WHERE b = "abcd1e";
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b <=> "abcd2e";
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b < "ABCD1e";
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b <= "abcd" ORDER BY b DESC LIMIT 2;
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b > "word";
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b >= "word";
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b BETWEEN "ccccc" AND "helloworld" ORDER BY b LIMIT 2;
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b LIKE "abcde%" ORDER BY a DESC LIMIT 1;
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b REGEXP "str";
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b IN ("bcd", "acdef");
--sorted_result
SELECT * FROM t1;
DELETE FROM t1  WHERE b != "test1";
--sorted_result
SELECT * FROM t1;
DELETE FROM t1 WHERE b IS NOT NULL;
--sorted_result
SELECT * FROM t1;
DROP TABLE t1;

#
# MULTI UPDATE/MULTI DELETE
#
CREATE TABLE t1(pk INT, a MEDIUMINT, b SMALLINT, PRIMARY KEY (pk));
CREATE TABLE t2(pk INT, a MEDIUMINT, b SMALLINT, PRIMARY KEY (pk));
INSERT INTO t1 VALUES (1,1,1),(13,14,2),(11,8,3),(7,21,14),(5,5,6),(9,13,5),(2,9,4),(16,7,9),(10,28,3),(21,21,21),(8,8,8),(19,8,3);
INSERT INTO t2 VALUES (1,1,1),(6,11,2),(8,13,3),(5,21,14),(7,5,6),(15,17,5),(14,8,4),(21,7,9),(17,21,3),(12,14,21),(10,8,8),(2,8,3);
# UPDATE
UPDATE t1 AS A, t2 AS B SET A.a = -1, B.b = -1 WHERE A.a = 9 AND B.b = 3;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
UPDATE t1 AS A, t2 AS B SET A.a = -2, B.b = -2 WHERE A.a > 13 AND B.b <= 5;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
UPDATE t1 AS A, t2 AS B SET A.a = -3, B.b = -3 WHERE A.a < 6 AND B.b >= 11;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
UPDATE t1 AS A, t2 AS B SET A.a = -4, B.b = -4 WHERE A.a BETWEEN 6 AND 12;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
# DELETE
DELETE FROM t1;
DELETE FROM t2;
INSERT INTO t1 VALUES (1,1,1),(13,14,2),(11,8,3),(7,21,14),(5,5,6),(9,13,5),(2,9,4),(16,7,9),(10,28,3),(21,21,21),(8,8,8),(19,8,3);
INSERT INTO t2 VALUES (1,1,1),(6,11,2),(8,13,3),(5,21,14),(7,5,6),(15,17,5),(14,8,4),(21,7,9),(17,21,3),(12,14,21),(10,8,8),(2,8,3);
DELETE t1.*, t2.* FROM t1,t2 WHERE t1.a = t2.b AND t1.b > 10;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
DELETE t1.*, t2.* FROM t1,t2 WHERE t1.a < t2.b AND t1.a >= 11 AND t2.b <= 15;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
# CREATE INDEX
CREATE INDEX a ON t1(a);
CREATE INDEX b ON t1(b);
CREATE INDEX a ON t2(a);
CREATE INDEX b ON t2(b);
DELETE FROM t1;
DELETE FROM t2;
INSERT INTO t1 VALUES (1,1,1),(13,14,2),(11,8,3),(7,21,14),(5,5,6),(9,13,5),(2,9,4),(16,7,9),(10,28,3),(21,21,21),(8,8,8),(19,8,3);
INSERT INTO t2 VALUES (1,1,1),(6,11,2),(8,13,3),(5,21,14),(7,5,6),(15,17,5),(14,8,4),(21,7,9),(17,21,3),(12,14,21),(10,8,8),(2,8,3);
# UPDATE
UPDATE t1 AS A, t2 AS B SET A.a = -1, B.b = -1 WHERE A.a = 9 AND B.b = 3;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
UPDATE t1 AS A, t2 AS B SET A.a = -2, B.b = -2 WHERE A.a > 13 AND B.b <= 5;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
UPDATE t1 AS A, t2 AS B SET A.a = -3, B.b = -3 WHERE A.a < 6 AND B.b >= 11;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
UPDATE t1 AS A, t2 AS B SET A.a = -4, B.b = -4 WHERE A.a BETWEEN 6 AND 12;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
# DELETE
DELETE FROM t1;
DELETE FROM t2;
INSERT INTO t1 VALUES (1,1,1),(13,14,2),(11,8,3),(7,21,14),(5,5,6),(9,13,5),(2,9,4),(16,7,9),(10,28,3),(21,21,21),(8,8,8),(19,8,3);
INSERT INTO t2 VALUES (1,1,1),(6,11,2),(8,13,3),(5,21,14),(7,5,6),(15,17,5),(14,8,4),(21,7,9),(17,21,3),(12,14,21),(10,8,8),(2,8,3);
DELETE t1.*, t2.* FROM t1,t2 WHERE t1.a = t2.b AND t1.b > 10;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
DELETE t1.*, t2.* FROM t1,t2 WHERE t1.a < t2.b AND t1.a >= 11 AND t2.b <= 15;
--sorted_result
SELECT * FROM t1;
--sorted_result
SELECT * FROM t2;
DROP TABLE t1,t2;

#
# TRUNCATE TABLE 
#
CREATE TABLE t1(a BINARY(127));
INSERT INTO t1 VALUES ("a"),("a "),("abcdefg"),("ABCD"),("hello"),(" HELLO"),(" string ");
--sorted_result
SELECT * FROM t1;
TRUNCATE TABLE t1;
--sorted_result
SELECT * FROM t1;
DROP TABLE t1;

#
# QUERY WITH WHERE + BASIC CONDITION + AND + OR + NOT + IN + LIKE + REGEX
#
CREATE TABLE t1 (a INT, b TEXT, c char(16));
INSERT INTO t1 VALUES (2,'abcd1e', 'testc1'),(5,'abcd2e','testc2'),(11,'helloworld','helloworld'),(3,'1234567','1234567'),(10,'ccccc','testc3'),(12,'string','string'),(9,'word','testc4'),(8,'xxyyzz','xxyyzz'),(1,'ABCD','ABCD'),(6,'abcd','testc5'),(15,'ABCD1e','testc6'),(4,'ABCD2e','ABCD2e'),(14,"11111","11111"),(7,"22222","22222"),(21,NULL,NULL);
--sorted_result
SELECT * FROM t1 WHERE b = "abcd1e";
--sorted_result
SELECT a,b FROM t1 WHERE b <=> "abcd2e";
SELECT a,b,c FROM t1 WHERE b < "abcd" ORDER BY b DESC;
--sorted_result
SELECT * FROM t1 WHERE b <= "ccccc";
--sorted_result
SELECT * FROM t1 WHERE b > "abcde";
SELECT * FROM t1 WHERE b >= "ABCD1e" ORDER BY b LIMIT 7;
SELECT a FROM t1 WHERE b BETWEEN "abcd1e" AND "xxyyzz" ORDER BY a DESC LIMIT 7;
--sorted_result
SELECT b FROM t1 WHERE b IN ("word", "ABCD", "ABCD2e", "string", "helloworld", "11111", "1234567");
--sorted_result
SELECT c FROM t1 WHERE b NOT IN ("abcd", "22222", "11111");
--sorted_result
SELECT * FROM t1 WHERE b LIKE "abc%";
--sorted_result
SELECT * FROM t1 WHERE b REGEXP "1";
--sorted_result
SELECT * FROM t1 WHERE b != "abcd2e";
--sorted_result
SELECT * FROM t1 WHERE b <> "ABCD";
--sorted_result
SELECT b,c FROM t1 WHERE b = c;
--sorted_result
SELECT a FROM t1 WHERE b IS NULL;
--sorted_result
SELECT * FROM t1 WHERE b > "abcd1e" AND c <= "testc4";
--sorted_result
SELECT * FROM t1 WHERE b < "string" AND c >= "testc1";
--sorted_result
SELECT * FROM t1 WHERE b <= "string" OR c > "testc5";
--sorted_result
SELECT * FROM t1 WHERE b > "abcdefg" OR c < "testc11";
--sorted_result
SELECT * FROM t1 WHERE NOT b <= "abcd"; 
--sorted_result
SELECT * FROM t1 WHERE NOT b > "11111" OR c < "testc3";
# CREATE INDEX
CREATE INDEX b ON t1(b(3));
--sorted_result
SELECT * FROM t1 WHERE b = "abcd1e";
--sorted_result
SELECT a,b FROM t1 WHERE b <=> "abcd2e";
SELECT a,b,c FROM t1 WHERE b < "abcd" ORDER BY b DESC;
--sorted_result
SELECT * FROM t1 WHERE b <= "ccccc";
--sorted_result
SELECT * FROM t1 WHERE b > "abcde";
SELECT * FROM t1 WHERE b >= "ABCD1e" ORDER BY b LIMIT 7;
SELECT a FROM t1 WHERE b BETWEEN "abcd1e" AND "xxyyzz" ORDER BY a DESC LIMIT 7;
--sorted_result
SELECT b FROM t1 WHERE b IN ("word", "ABCD", "ABCD2e", "string", "helloworld", "11111", "1234567");
--sorted_result
SELECT c FROM t1 WHERE b NOT IN ("abcd", "22222", "11111");
--sorted_result
SELECT * FROM t1 WHERE b LIKE "abc%";
--sorted_result
SELECT * FROM t1 WHERE b REGEXP "1";
--sorted_result
SELECT * FROM t1 WHERE b != "abcd2e";
--sorted_result
SELECT * FROM t1 WHERE b <> "ABCD";
--sorted_result
SELECT b,c FROM t1 WHERE b = c;
--sorted_result
SELECT a FROM t1 WHERE b IS NULL;
--sorted_result
SELECT * FROM t1 WHERE b > "abcd1e" AND c <= "testc4";
--sorted_result
SELECT * FROM t1 WHERE b < "string" AND c >= "testc1";
--sorted_result
SELECT * FROM t1 WHERE b <= "string" OR c > "testc5";
--sorted_result
SELECT * FROM t1 WHERE b > "abcdefg" OR c < "testc11";
--sorted_result
SELECT * FROM t1 WHERE NOT b <= "abcd";
--sorted_result
SELECT * FROM t1 WHERE NOT b > "11111" OR c < "testc3";
DROP TABLE t1;

#
# FUNC (FIELD)
#
CREATE TABLE t1 (a SMALLINT NOT NULL, b MEDIUMINT NOT NULL);
INSERT INTO t1 (a,b) VALUES (1,36),(8,11),(3,5),(6,9),(4,10),(9,1),(2,12),(7,18),(5,2),(10,0);
SELECT COUNT(a) FROM t1 WHERE a > 3;
--sorted_result
SELECT AVG(b) FROM t1 WHERE a >= 2;
--sorted_result
SELECT MAX(a) FROM t1 WHERE a < 10;
--sorted_result
SELECT MIN(b) FROM t1 WHERE a != 1;
--sorted_result
SELECT SUM(a) FROM t1 WHERE a IS NOT NULL;
--sorted_result
SELECT CONCAT(a,b) AS ab FROM t1 WHERE a IS NOT NULL AND b IS NOT NULL;
# CREATE INDEX
CREATE INDEX a ON t1(a);
CREATE INDEX b ON t1(b);
--sorted_result
SELECT COUNT(a) FROM t1 WHERE a > 3;
--sorted_result
SELECT AVG(b) FROM t1 WHERE a >= 2;
--sorted_result
SELECT MAX(a) FROM t1 WHERE a < 10;
--sorted_result
SELECT MIN(b) FROM t1 WHERE a != 1;
--sorted_result
SELECT SUM(a) FROM t1 WHERE a IS NOT NULL;
--sorted_result
SELECT CONCAT(a,b) AS ab FROM t1 WHERE a IS NOT NULL AND b IS NOT NULL;
DROP TABLE t1;

#
# FUNC OF STRING
#
CREATE TABLE t1 (a CHAR(64), b BIT(8));
INSERT INTO t1 VALUES ('one', 94),(NULL, 31),('two', 61),('four', 78),('hello', 88),('abcdefg', 122),('abc', 0),('monty', 9),('www.sequoiadb.com', 107),(' 123', 11),('456 ', 23),(' 789 ', 34), (' 01', 34), ('VVV', 1);
--sorted_result
SELECT a,b FROM t1 WHERE BIT_LENGTH(b) > 6;
--sorted_result
SELECT * FROM t1 WHERE CHAR_LENGTH(a) <= 4 ;
--sorted_result
SELECT * FROM t1 WHERE LENGTH(a) != 3 ;
--sorted_result
SELECT * FROM t1 WHERE CHAR(ASCII(a)) = 'a' OR ORD(a) = 't' ;
--sorted_result
SELECT * FROM t1 WHERE HEX(b) >= '4D';
--sorted_result
SELECT * FROM t1 WHERE LOCATE(a, "abc") > 0 OR LOCATE(a, "hel") IS NULL;
--sorted_result
SELECT * FROM t1 WHERE INSTR(a, "o") > 1;
--sorted_result
SELECT * FROM t1 WHERE POSITION('b' IN a) < 5;
#SEQUOIASQLMAINSTREAM-206
#--sorted_result
#SELECT * FROM t1 WHERE LEFT(a,2) > 'h' AND LEFT(a,3) > 'd';
--sorted_result
SELECT * FROM t1 WHERE a <= LCASE('h') AND a >= UCASE('t');
--sorted_result
SELECT * FROM t1 WHERE SUBSTRING(a,1,2) <> 'bc' AND MID(a,2,1) < 'o';
#SEQUOIASQLMAINSTREAM-206
#--sorted_result
#SELECT * FROM t1 WHERE SUBSTRING_INDEX(a,'.',1) > 'hello';
--sorted_result
SELECT a,b FROM t1 WHERE LTRIM(a) <= 'four' and RTRIM(a) >= '456';
--sorted_result
SELECT * FROM t1 WHERE a > REPEAT('g',10);
--sorted_result
SELECT * FROM t1 WHERE a > CONCAT_WS('com','.','sequoiadb');
#SEQUOIASQLMAINSTREM-206
#--sorted_result
#SELECT * FROM t2 WHERE STRCMP(a , 'hel') > 0;
--sorted_result
SELECT DISTINCT a FROM t1 WHERE ELT(a, 'ab') IS NOT NULL;
--sorted_result
SELECT a FROM t1 WHERE FIELD(a, "abc","abcdefg","hello") > 0;
--sorted_result
SELECT a,b FROM t1 WHERE FIND_IN_SET(a, 'abc') > 0;
--sorted_result
SELECT * FROM t1 WHERE INSTR(a, 'o') > 0;
--sorted_result
SELECT a FROM t1 WHERE a != INSERT('axdefg',2,1,'bc');
--sorted_result
SELECT a,b FROM t1 WHERE a > REPLACE('hello','hel','ol');
--sorted_result
SELECT * FROM t1 WHERE a < REVERSE('com');
--sorted_result
SELECT * FROM t1 WHERE a > RPAD('abcd',3,'12') AND a < LPAD('helxy', 3 , 2);
--sorted_result
SELECT * FROM t1 WHERE a >= MAKE_SET(7,'a','b','c');
--sorted_result
SELECT * FROM t1 WHERE b < OCT(56);
# CREATE INDEX
CREATE INDEX a ON t1(a);
CREATE INDEX b ON t1(b);
--sorted_result
SELECT a,b FROM t1 WHERE BIT_LENGTH(b) > 6;
--sorted_result
SELECT * FROM t1 WHERE CHAR_LENGTH(a) <= 4 ;
--sorted_result
SELECT * FROM t1 WHERE LENGTH(a) != 3 ;
--sorted_result
SELECT * FROM t1 WHERE CHAR(ASCII(a)) = 'a' OR ORD(a) = 't' ;
--sorted_result
SELECT * FROM t1 WHERE HEX(b) >= '4D';
--sorted_result
SELECT * FROM t1 WHERE LOCATE(a, "abc") > 0 OR LOCATE(a, "hel") IS NULL;
--sorted_result
SELECT * FROM t1 WHERE INSTR(a, "o") > 1;
--sorted_result
SELECT * FROM t1 WHERE POSITION('b' IN a) < 5;
#SEQUOIASQLMAINSTREAM-206
#--sorted_result
#SELECT * FROM t1 WHERE LEFT(a,2) > 'h' AND LEFT(a,3) > 'd';
--sorted_result
SELECT * FROM t1 WHERE a <= LCASE('h') AND a >= UCASE('t');
--sorted_result
SELECT * FROM t1 WHERE SUBSTRING(a,1,2) <> 'bc' AND MID(a,2,1) < 'o';
#SEQUOIASQLMAINSTREAM-206
#--sorted_result
#SELECT * FROM t1 WHERE SUBSTRING_INDEX(a,'.',1) > 'hello';
--sorted_result
SELECT a,b FROM t1 WHERE LTRIM(a) <= 'four' and RTRIM(a) >= '456';
--sorted_result
SELECT * FROM t1 WHERE a > REPEAT('g',10);
--sorted_result
SELECT * FROM t1 WHERE a > CONCAT_WS('com','.','sequoiadb');
#SEQUOIASQLMAINSTREM-206
#--sorted_result
#SELECT * FROM t2 WHERE STRCMP(a , 'hel') > 0;
--sorted_result
SELECT DISTINCT a FROM t1 WHERE ELT(a, 'ab') IS NOT NULL;
--sorted_result
SELECT a FROM t1 WHERE FIELD(a, "abc","abcdefg","hello") > 0;
--sorted_result
SELECT a,b FROM t1 WHERE FIND_IN_SET(a, 'abc') > 0;
--sorted_result
SELECT * FROM t1 WHERE INSTR(a, 'o') > 0;
# SEQUOIASQLMAINSTREAM-220
#--sorted_result
#SELECT a FROM t1 WHERE a != INSERT('axdefg',2,1,'bc');
--sorted_result
SELECT a,b FROM t1 WHERE a > REPLACE('hello','hel','ol');
# SEQUOIASQLMAINSTREAM-220
#--sorted_result
#SELECT * FROM t1 WHERE a < REVERSE('com');
--sorted_result
SELECT * FROM t1 WHERE a > RPAD('abcd',3,'12') AND a < LPAD('helxy', 3 , 2);
--sorted_result
SELECT * FROM t1 WHERE a >= MAKE_SET(7,'a','b','c');
--sorted_result
SELECT * FROM t1 WHERE b < OCT(56);
DROP TABLE t1;

#
# FUNC OF DATE/DATETIME/TIMESTAMP
#
CREATE TABLE t1 (d DATE, dt DATETIME, t TIMESTAMP, tm time);
INSERT INTO t1 VALUES ("2000-02-05", "2002-10-21 00:00:00", "1994-03-02 10:11:12", "09:00:00"),("2002-12-31", "2002-10-28 00:00:00", "1997-01-02 03:04:05", "13:00:00"),("2003-03-01", "2002-11-04 00:00:00", "1999-04-02 00:00:00", "19:38:34"),("2001-01-01", "2003-10-29 16:51:06", "1998-12-31 23:59:59", "12:30:35"),("1997-12-01", "2004-11-05 16:47:31", "2000-12-31 23:59:59", "20:33:34"),("1999-11-30", "2011-01-20 01:00:00", "2001-01-01 00:00:00", "100:55:50"),("2007-08-01", "2038-01-19 12:14:07", "2010-02-01 09:31:01", "300:55:50"),("2006-01-01", "2020-01-13 19:12:17", "2010-02-01 09:31:04", "-24:00:00"),("2005-05-05", "1999-03-14 02:17:27", "2008-02-23 09:23:45", "24:00:00"),("2010-07-15", "2001-06-06 01:01:01", "2010-03-05 11:08:02", "48:00:00"),("2019-01-01", "2008-09-19 07:13:16", "2011-01-06 12:34:30", "-48:00:00");
--sorted_result
SELECT * FROM t1 WHERE d > DATE_FORMAT(dt, "%Y-%m-%d");
--sorted_result
SELECT d,dt,tm FROM t1 WHERE TIME_FORMAT(tm, '%H') >= 20;
--sorted_result
SELECT d,tm FROM t1 WHERE tm < SEC_TO_TIME('837:59:59');
--sorted_result
SELECT t,tm FROM t1 WHERE TIME_TO_SEC(tm) > 100000;
--sorted_result
SELECT * FROM t1 WHERE dt <= DATE_ADD(t, INTERVAL 1 SECOND);
--sorted_result
SELECT * FROM t1 WHERE t <= DATE_SUB(dt, INTERVAL 1 SECOND);
--sorted_result
SELECT * FROM t1 WHERE EXTRACT(DAY FROM d) > 2;
--sorted_result
SELECT * FROM t1 WHERE DAYNAME(d) > 'Saturday';
--sorted_result
SELECT * FROM t1 WHERE MONTHNAME(dt) > 'March';
--sorted_result
SELECT d,dt,t FROM t1 WHERE DAYOFYEAR(t) > 60;
--sorted_result
SELECT dt,t,tm FROM t1 WHERE DAYOFMONTH(t) > 20;
--sorted_result
SELECT * FROM t1 WHERE WEEK(d) < 30;
--sorted_result
SELECT * FROM t1 WHERE WEEKOFYEAR(dt) != 45 AND WEEKDAY(t) <= 3;
--sorted_result
SELECT * FROM t1 WHERE MONTH(d) > 2 AND WEEK(dt) < 50 AND YEAR(t) != 2010;
--sorted_result
SELECT * FROM t1 WHERE YEARWEEK(d) > 200201 AND HOUR(t) < 20 AND QUARTER(dt) <> 1;
--sorted_result
SELECT * FROM t1 WHERE TO_DAYS(t) <= 731516;
--sorted_result
SELECT * FROM t1 WHERE UNIX_TIMESTAMP(t) > 1000000000;
--sorted_result
SELECT * FROM t1 WHERE t < FROM_UNIXTIME(950000000);
--sorted_result
SELECT d,t FROM t1 WHERE t >= TIMESTAMPADD(HOUR,8820,d);
--sorted_result
SELECT * FROM t1 WHERE TIMESTAMPDIFF(day,dt,t) > 0;
--sorted_result
SELECT * FROM t1 WHERE LAST_DAY(d) < "2005-12-31" AND FROM_DAYS(TO_DAYS(t)) > "1999-12-01";
--sorted_result
SELECT * FROM t1 WHERE t < LOCALTIMESTAMP() AND t <> UTC_TIMESTAMP();
--sorted_result
SELECT * FROM t1 WHERE MONTHNAME(STR_TO_DATE(d,'%Y-%m-%d')) >= 'March';
--sorted_result
SELECT * FROM t1 WHERE DATE(d) BETWEEN CAST("2003-1-1" as DATE) AND CAST("2008-12-1" as DATE);
--sorted_result
SELECT * FROM t1 WHERE MAKEDATE(2002,1) BETWEEN DATE(d) AND DATE(dt);
--sorted_result
SELECT d,dt,tm FROM t1 WHERE ADDTIME(tm, '20:40:00') > '40:00:00' AND SUBTIME(tm, '30:23:00') < '-80:00:00';
--sorted_result
SELECT * FROM t1 WHERE tm > MAKETIME(30,25,7);
--sorted_result
SELECT d,dt,t,tm FROM t1 WHERE d <= NOW(6) AND dt  < SUBTIME(CURRENT_TIME(2), '1 1:1:1.000002') AND t <> CURRENT_TIMESTAMP(0);
# CREATE INDEX
CREATE INDEX d ON t1(d);
CREATE INDEX dt ON t1(dt);
CREATE INDEX t ON t1(t);
CREATE INDEX tm ON t1(tm);
--sorted_result
SELECT * FROM t1 WHERE d > DATE_FORMAT(dt, "%Y-%m-%d");
--sorted_result
SELECT d,dt,tm FROM t1 WHERE TIME_FORMAT(tm, '%H') >= 20;
--sorted_result
SELECT d,tm FROM t1 WHERE tm < SEC_TO_TIME('837:59:59');
--sorted_result
SELECT t,tm FROM t1 WHERE TIME_TO_SEC(tm) > 100000;
--sorted_result
SELECT * FROM t1 WHERE dt <= DATE_ADD(t, INTERVAL 1 SECOND);
--sorted_result
SELECT * FROM t1 WHERE t <= DATE_SUB(dt, INTERVAL 1 SECOND);
--sorted_result
SELECT * FROM t1 WHERE EXTRACT(DAY FROM d) > 2;
--sorted_result
SELECT * FROM t1 WHERE DAYNAME(d) > 'Saturday';
--sorted_result
SELECT * FROM t1 WHERE MONTHNAME(dt) > 'March';
--sorted_result
SELECT d,dt,t FROM t1 WHERE DAYOFYEAR(t) > 60;
--sorted_result
SELECT dt,t,tm FROM t1 WHERE DAYOFMONTH(t) > 20;
--sorted_result
SELECT * FROM t1 WHERE WEEK(d) < 30;
--sorted_result
SELECT * FROM t1 WHERE WEEKOFYEAR(dt) != 45 AND WEEKDAY(t) <= 3;
--sorted_result
SELECT * FROM t1 WHERE MONTH(d) > 2 AND WEEK(dt) < 50 AND YEAR(t) != 2010;
--sorted_result
SELECT * FROM t1 WHERE YEARWEEK(d) > 200201 AND HOUR(t) < 20 AND QUARTER(dt) <> 1;
--sorted_result
SELECT * FROM t1 WHERE TO_DAYS(t) <= 731516;
--sorted_result
SELECT * FROM t1 WHERE UNIX_TIMESTAMP(t) > 1000000000;
--sorted_result
SELECT * FROM t1 WHERE t < FROM_UNIXTIME(950000000);
--sorted_result
SELECT d,t FROM t1 WHERE t >= TIMESTAMPADD(HOUR,8820,d);
--sorted_result
SELECT * FROM t1 WHERE TIMESTAMPDIFF(day,dt,t) > 0;
--sorted_result
SELECT * FROM t1 WHERE LAST_DAY(d) < "2005-12-31" AND FROM_DAYS(TO_DAYS(t)) > "1999-12-01";
--sorted_result
SELECT * FROM t1 WHERE t < LOCALTIMESTAMP() AND t <> UTC_TIMESTAMP();
--sorted_result
SELECT * FROM t1 WHERE MONTHNAME(STR_TO_DATE(d,'%Y-%m-%d')) >= 'March';
--sorted_result
SELECT * FROM t1 WHERE DATE(d) BETWEEN CAST("2003-1-1" as DATE) AND CAST("2008-12-1" as DATE);
--sorted_result
SELECT * FROM t1 WHERE MAKEDATE(2002,1) BETWEEN DATE(d) AND DATE(dt);
--sorted_result
SELECT d,dt,tm FROM t1 WHERE ADDTIME(tm, '20:40:00') > '40:00:00' AND SUBTIME(tm, '30:23:00') < '-80:00:00';
--sorted_result
SELECT * FROM t1 WHERE tm > MAKETIME(30,25,7);
--sorted_result
SELECT d,dt,t,tm FROM t1 WHERE d <= NOW(6) AND dt  < SUBTIME(CURRENT_TIME(2), '1 1:1:1.000002') AND t <> CURRENT_TIMESTAMP(0);
DROP TABLE t1;

#
# FUNC OF MATH
#
CREATE TABLE t1 (a INT, b MEDIUMINT, c DECIMAL(60,30), d DOUBLE);
INSERT INTO t1 VALUES (1,4,12.12,4.551),(10,6,11.11,4.55),(22,21,123.123,3.14),(34,30,12345.12345,3.14135),(14,10,100.1,111.551),(9,9,9.9,99.341),(30,31,34.67,14.001),(101,100,234.354,678.1),(89,89,90.89,90.99),(13,21,21.3,-34.01
),(67,34,45.21,123.001),(28,28,12.21,12.21),(110,99,110.99,110.99),(200,200,455.12,455.12),(300,300,1.1,1.1);
--sorted_result
SELECT * FROM t1 WHERE FLOOR(d) > 10 AND CEILING(c) < 55 AND CEIL(a) > 10;
--sorted_result
SELECT * FROM t1 WHERE TRUNCATE(d,1) <= 4.5;
--sorted_result
SELECT * FROM t1 WHERE ROUND(c) > 100;
--sorted_result
SELECT * FROM t1 WHERE ABS(d) < 100 AND SIGN(d) > -1;
--sorted_result
SELECT * FROM t1 WHERE LOG(EXP(a)) >100;
--sorted_result
SELECT * FROM t1 WHERE EXP(LN(SQRT(a))*4) < 1000.000000000000002;
--sorted_result
SELECT * FROM t1 WHERE LOG2(a) > 6 AND POW(10,LOG10(b)) > 81;
--sorted_result
SELECT * FROM t1 WHERE POWER(a,2) > b;
--sorted_result
SELECT * FROM t1 WHERE RAND(b) < 0.23454;
--sorted_result
SELECT * FROM t1 WHERE FORMAT(ABS(TAN(d)),6) > 1.23456 AND FORMAT(SIN(a/2),6) > 0;
--sorted_result
SELECT * FROM t1 WHERE FORMAT(COS(c/2),6) > 0.333333 AND FORMAT(cot(b),6) < 0.123456;
--sorted_result
SELECT * FROM t1 WHERE DEGREES(a) > 1000 AND RADIANS(b) > 1.0001;
--sorted_result
SELECT * FROM t1 WHERE ACOS(c/100) IS NOT NULL AND ASIN(d/100) IS NOT NULL;
--sorted_result
SELECT * FROM t1 WHERE MOD(CAST(b AS UNSIGNED), 3) > 0 AND SQRT(CAST(a AS UNSIGNED)) >= 5.5;
--sorted_result
SELECT * FROM t1 WHERE (a DIV 2) >= c - b;
--sorted_result
SELECT * FROM t1 WHERE a * b / 10 > d + c;
--sorted_result
SELECT * FROM t1 WHERE MOD(CRC32(b), 2) > 0;
# CREATE INDEX
CREATE INDEX a ON t1(a);
CREATE INDEX b ON t1(b);
CREATE INDEX c ON t1(c);
CREATE INDEX d ON t1(d);
--sorted_result
SELECT * FROM t1 WHERE FLOOR(d) > 10 AND CEILING(c) < 55 AND CEIL(a) > 10;
--sorted_result
SELECT * FROM t1 WHERE TRUNCATE(d,1) <= 4.5;
--sorted_result
SELECT * FROM t1 WHERE ROUND(c) > 100;
--sorted_result
SELECT * FROM t1 WHERE ABS(d) < 100 AND SIGN(d) > -1;
--sorted_result
SELECT * FROM t1 WHERE LOG(EXP(a)) >100;
--sorted_result
SELECT * FROM t1 WHERE EXP(LN(SQRT(a))*4) < 1000.000000000000002;
--sorted_result
SELECT * FROM t1 WHERE LOG2(a) > 6 AND POW(10,LOG10(b)) > 81;
--sorted_result
SELECT * FROM t1 WHERE POWER(a,2) > b;
--sorted_result
SELECT * FROM t1 WHERE RAND(b) < 0.23454;
--sorted_result
SELECT * FROM t1 WHERE FORMAT(ABS(TAN(d)),6) > 1.23456 AND FORMAT(SIN(a/2),6) > 0;
--sorted_result
SELECT * FROM t1 WHERE FORMAT(COS(c/2),6) > 0.333333 AND FORMAT(cot(b),6) < 0.123456;
--sorted_result
SELECT * FROM t1 WHERE DEGREES(a) > 1000 AND RADIANS(b) > 1.0001;
--sorted_result
SELECT * FROM t1 WHERE ACOS(c/100) IS NOT NULL AND ASIN(d/100) IS NOT NULL;
--sorted_result
SELECT * FROM t1 WHERE MOD(CAST(b AS UNSIGNED), 3) > 0 AND SQRT(CAST(a AS UNSIGNED)) >= 5.5;
--sorted_result
SELECT * FROM t1 WHERE (a DIV 2) >= c - b;
--sorted_result
SELECT * FROM t1 WHERE a * b / 10 > d + c;
--sorted_result
SELECT * FROM t1 WHERE MOD(CRC32(b), 2) > 0;
DROP TABLE t1;

#
# FUNC OF GROUP
#
CREATE TABLE t1(a INT, b BIGINT, c VARCHAR(127));
INSERT INTO t1 VALUES (11, 101, 'abcd'),(34, 75, '123'),(-9, 56, 'hello'),(22, 99, 'vac'),(-1, 32, '456'),(4, -25, '789'),(30, 30, 'page'),(67, 59, 'opp'),(12, 63, 'ewi'),(36,-23, 'roe'),(-13, 49, 'fls'),(17, 9, 'dj'),(6, 19, 'gfl'),(2, -2, 'fks');
--sorted_result
SELECT SUM(a) FROM t1 GROUP BY a;
--sorted_result
SELECT COUNT(b) FROM t1 GROUP BY b;
--sorted_result
SELECT AVG(a) FROM t1 GROUP BY a;
--sorted_result
SELECT STD(ALL b) FROM t1;
# SEQUOIASQLMAINSTREAM-220
#--sorted_result
#SELECT VARIANCE(b) FROM t1;
--sorted_result
SELECT BIT_OR(a) FROM t1;
--sorted_result
SELECT BIT_AND(b) FROM t1;
--sorted_result
SELECT MIN(a) FROM t1;
--sorted_result
SELECT MAX(b) FROM t1;
--sorted_result
SELECT a,b FROM t1 GROUP BY a,b HAVING SUM(a) = SUM(b) ;
--sorted_result
SELECT a FROM t1 GROUP BY a HAVING AVG(a) > 9;
--sorted_result
SELECT a FROM t1 GROUP BY a HAVING MAX(a) > 20;
--sorted_result
SELECT b FROM t1 GROUP BY b HAVING MIN(b) < 15;
# CREATE INDEX
CREATE INDEX a ON t1(a);
CREATE INDEX b ON t1(b);
--sorted_result
SELECT SUM(a) FROM t1 GROUP BY a;
--sorted_result
SELECT COUNT(b) FROM t1 GROUP BY b;
--sorted_result
SELECT AVG(a) FROM t1 GROUP BY a;
--sorted_result
SELECT STD(ALL b) FROM t1;
# SEQUOIASQLMAINSTREAM-220
#--sorted_result
#SELECT VARIANCE(b) FROM t1;
--sorted_result
SELECT BIT_OR(a) FROM t1;
--sorted_result
SELECT BIT_AND(b) FROM t1;
--sorted_result
SELECT MIN(a) FROM t1;
--sorted_result
SELECT MAX(b) FROM t1;
--sorted_result
SELECT a,b FROM t1 GROUP BY a,b HAVING SUM(a) = SUM(b) ;
--sorted_result
SELECT a FROM t1 GROUP BY a HAVING AVG(a) > 9;
--sorted_result
SELECT a FROM t1 GROUP BY a HAVING MAX(a) > 20;
--sorted_result
SELECT b FROM t1 GROUP BY b HAVING MIN(b) < 15;
DROP TABLE t1;

#
# QUERY WITH GROUP BY
#
CREATE TABLE t1 (a MEDIUMINT, b INT, c CHAR(64), d BLOB, e DATE, f TEXT);
CREATE TABLE t2 (a INT, b BIGINT);
CREATE TABLE t3 (a INT4, b CHAR(16), c DATETIME) CHARSET=UTF8;
INSERT INTO t1 VALUES (13,5,'aaa','aaa','2005-05-01','aaa'),(5,2,'bb1','bb1','2006-06-05','bb1'),(-3,1,'111','111','2008-01-12','111'),(21,3,'eog','eog','1990-03-01','eog'),(15,35,'fqc','fqc','2015-09-30','fqc'),(-16,-9,'yew','yew','2001-09-01','yew'),(31,13,'bow','bow','2101-07-21','bow'),(6,10,NULL,NULL,NULL,NULL),(101,-2,NULL,NULL,NULL,NULL),(7,2,'dno','dno','2010-04-01','dno'),(65,4,'hello','hello','2093-11-5','hello'),(27,-14,NULL,NULL,NULL,NULL),(22,11,NULL,NULL,NULL,NULL),(-3,-3,'yew','yew','2001-09-01','yew'),(13,13,'bb1','bb1','2006-06-05','bb1');
INSERT INTO t2 VALUES (13,5),(-3,2),(21,3),(65,4),(31,4),(13,13),(45,-4),(1,24),(11,9),(10,10);
INSERT INTO t3 VALUES (13,'aaa','2005-05-01 12:30:00'),(-3,'bb1','2005-05-01 12:30:00'),(21,'111','2005-05-01 12:30:00'),(65,'eog','2004-05-01 12:30:00'),(31,'fqc','2195-05-01 11:30:00'),(13,'yew','2000-10-01 12:30:00'),(45,'bow',NULL),(1,'dno',NULL),(11,'hello',NULL),(10,'fed',NULL);
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a > 20;
--sorted_result
SELECT b, SUM(a) FROM t1 GROUP BY b,a DESC;
--sorted_result
SELECT a, MIN(b),e, COUNT(DISTINCT c) FROM t1 GROUP BY a,b,c,e HAVING a > b + c;
--sorted_result
SELECT BINARY d FROM t1 GROUP BY d;
--sorted_result
SELECT GROUP_CONCAT(DISTINCT d) AS dd FROM t1 GROUP BY d HAVING dd LIKE "%";
--sorted_result
SELECT a, d, ROUND(RAND(b)*5) r2 FROM t1 WHERE a < 60 GROUP BY a,b,d HAVING d > 'a';
--sorted_result
SELECT MAX(t1.a), t1.b, t1.e FROM t1 LEFT JOIN t2 ON t2.a = t1.a AND t2.b = t1.b WHERE t1.d < 'hello' GROUP BY t1.a,t1.b,t1.e;
--sorted_result
SELECT t1.a,t2.b FROM t1,t2 WHERE t1.b=t2.b GROUP BY t1.a,t2.b ORDER BY NULL;
--sorted_result
SELECT a, SUM(b) AS b1 FROM t1 GROUP BY a HAVING SUM(b) > 10 AND a < 50;
--sorted_result
SELECT b FROM t3 WHERE a >= 20 AND b <= 'f' GROUP BY b;
--source include/turn_off_only_full_group_by.inc
--sorted_result
SELECT DISTINCT a, b, c, d, e, f FROM t1 WHERE a > 31 GROUP BY 'const';
--source include/restore_sql_mode_after_turn_off_only_full_group_by.inc
--sorted_result
SELECT c DIV 1 AS cc, a FROM t1 GROUP BY cc,a;
--sorted_result
SELECT COUNT(DISTINCT(t1.c)), LEFT(d, 256) AS comment FROM t1 LEFT JOIN t2 ON t1.a=t2.a GROUP BY comment;
--sorted_result
SELECT DATE(LEFT(e+1,7)) FROM t1 GROUP BY 1;
--sorted_result
SET SQL_MODE = 'ONLY_FULL_GROUP_BY';
--sorted_result
SELECT MAX(a)-MIN(a) FROM t1 GROUP BY b;
--sorted_result
SELECT a FROM t1 GROUP BY t1.a
  HAVING (SELECT AVG(SUM(t1.b) + t2.b) FROM t2 ORDER BY SUM(t2.a) LIMIT 1);
--sorted_result
SELECT SUBSTRING(a,1,10), LENGTH(a), GROUP_CONCAT(b) FROM t3 GROUP BY a;
SET sql_mode = default;
# CREATE INDEX
CREATE INDEX a ON t1(a);
CREATE INDEX b ON t1(b);
CREATE INDEX c ON t1(c);
CREATE INDEX e ON t1(e);
CREATE INDEX f ON t1(f(16));
CREATE INDEX a ON t2(a);
CREATE INDEX b ON t2(b);
CREATE INDEX a ON t3(a);
CREATE INDEX b ON t3(b);
CREATE INDEX c ON t3(c);
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a > 20;
--sorted_result
SELECT b, SUM(a) FROM t1 GROUP BY b,a DESC;
--sorted_result
SELECT a, MIN(b),e, COUNT(DISTINCT c) FROM t1 GROUP BY a,b,c,e HAVING a > b + c;
--sorted_result
SELECT BINARY d FROM t1 GROUP BY d;
--sorted_result
SELECT GROUP_CONCAT(DISTINCT d) AS dd FROM t1 GROUP BY d HAVING dd LIKE "%";
--sorted_result
SELECT a, d, ROUND(RAND(b)*5) r2 FROM t1 WHERE a < 60 GROUP BY a,b,d HAVING d > 'a';
--sorted_result
SELECT MAX(t1.a), t1.b, t1.e FROM t1 LEFT JOIN t2 ON t2.a = t1.a AND t2.b = t1.b WHERE t1.d < 'hello' GROUP BY t1.a,t1.b,t1.e;
--sorted_result
SELECT t1.a,t2.b FROM t1,t2 WHERE t1.b=t2.b GROUP BY t1.a,t2.b ORDER BY NULL;
--sorted_result
SELECT a, SUM(b) AS b1 FROM t1 GROUP BY a HAVING SUM(b) > 10 AND a < 50;
--sorted_result
SELECT b FROM t3 WHERE a >= 20 AND b <= 'f' GROUP BY b;
--source include/turn_off_only_full_group_by.inc
--sorted_result
SELECT DISTINCT a, b, c, d, e, f FROM t1 WHERE a > 31 GROUP BY 'const';
--source include/restore_sql_mode_after_turn_off_only_full_group_by.inc
--sorted_result
SELECT c DIV 1 AS cc, a FROM t1 GROUP BY cc,a;
--sorted_result
SELECT COUNT(DISTINCT(t1.c)), LEFT(d, 256) AS comment FROM t1 LEFT JOIN t2 ON t1.a=t2.a GROUP BY comment;
--sorted_result
SELECT DATE(LEFT(e+1,7)) FROM t1 GROUP BY 1;
SET SQL_MODE = 'ONLY_FULL_GROUP_BY';
--sorted_result
SELECT MAX(a)-MIN(a) FROM t1 GROUP BY b;
--sorted_result
SELECT a FROM t1 GROUP BY t1.a
  HAVING (SELECT AVG(SUM(t1.b) + t2.b) FROM t2 ORDER BY SUM(t2.a) LIMIT 1);
--sorted_result
SELECT SUBSTRING(a,1,10), LENGTH(a), GROUP_CONCAT(b) FROM t3 GROUP BY a;
SET sql_mode = default;
DROP TABLE t1,t2,t3;
# Bug #SEQUOIASQLMAINSTREAM-156
CREATE TABLE t1(a char(16), b text) DEFAULT CHARSET=latin1 COLLATE=latin1_bin;
INSERT INTO t1 VALUES ("hello", "hello");
INSERT INTO t1 VALUES ("HELLO", "HELLO");
INSERT INTO t1 VALUES ("hello ", "hello ");
INSERT INTO t1 VALUES ("HELLO ", "HELLO ");
INSERT INTO t1 VALUES (" hello", " hello");
INSERT INTO t1 VALUES (" HELLO", " HELLO");
INSERT INTO t1 VALUES (" hello ", " hello ");
INSERT INTO t1 VALUES (" HELLO ", " HELLO ");
INSERT INTO t1 VALUES ("HELLO ", "HELLO ");
INSERT INTO t1 VALUES ("hello ", "hello ");
INSERT INTO t1 VALUES ("hello", "hello");
INSERT INTO t1 VALUES ("HELLO", "HELLO");
INSERT INTO t1 VALUES ("hello1", "hello1");
INSERT INTO t1 VALUES ("HELLO1", "HELLO1");
INSERT INTO t1 VALUES ("hello1 ", "hello1 ");
INSERT INTO t1 VALUES ("HELLO1 ", "HELLO1 ");
INSERT INTO t1 VALUES (" hello1", " hello1");
INSERT INTO t1 VALUES (" HELLO1", " HELLO1");
INSERT INTO t1 VALUES (" hello1 ", " hello1 ");
INSERT INTO t1 VALUES (" HELLO1 ", " HELLO1 ");
INSERT INTO t1 VALUES ("HELLO1 ", "HELLO1 ");
INSERT INTO t1 VALUES ("hello1", "hello1");
INSERT INTO t1 VALUES ("hello1 ", "hello1 ");
INSERT INTO t1 VALUES ("HELLO1", "HELLO1");
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a;
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "hello";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "HELLO";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "hello1 ";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "HELLO1 ";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " hello";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " HELLO";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " hello1 ";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " HELLO1 ";
--sorted_result
SELECT a, b, COUNT(*) FROM t1 GROUP BY a,b HAVING a = b;
# CREATE INDEX
CREATE INDEX a ON t1(a);
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a;
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "hello";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "HELLO";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "hello1 ";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "HELLO1 ";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " hello";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " HELLO";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " hello1 ";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " HELLO1 ";
--sorted_result
SELECT a, b, COUNT(*) FROM t1 GROUP BY a,b HAVING a = b;
DROP TABLE t1;

# Bug #SEQUOIASQLMAINSTREAM-156
CREATE TABLE t1(a varchar(16), b set("hello","hello1"," hello", " hello1", " HELLO"," HELLO1","HELLO","HELLO1")) DEFAULT CHARSET=latin1 COLLATE=latin1_bin;
INSERT INTO t1 VALUES ("hello", "hello");
INSERT INTO t1 VALUES ("HELLO", "HELLO");
INSERT INTO t1 VALUES ("hello ", "hello ");
INSERT INTO t1 VALUES ("HELLO ", "HELLO ");
INSERT INTO t1 VALUES (" hello", " hello");
INSERT INTO t1 VALUES (" HELLO", " HELLO");
INSERT INTO t1 VALUES (" hello ", " hello ");
INSERT INTO t1 VALUES (" HELLO ", " HELLO ");
INSERT INTO t1 VALUES ("HELLO ", "HELLO ");
INSERT INTO t1 VALUES ("hello ", "hello ");
INSERT INTO t1 VALUES ("hello", "hello");
INSERT INTO t1 VALUES ("HELLO", "HELLO");
INSERT INTO t1 VALUES ("hello1", "hello1");
INSERT INTO t1 VALUES ("HELLO1", "HELLO1");
INSERT INTO t1 VALUES ("hello1 ", "hello1 ");
INSERT INTO t1 VALUES ("HELLO1 ", "HELLO1 ");
INSERT INTO t1 VALUES (" hello1", " hello1");
INSERT INTO t1 VALUES (" HELLO1", " HELLO1");
INSERT INTO t1 VALUES (" hello1 ", " hello1 ");
INSERT INTO t1 VALUES (" HELLO1 ", " HELLO1 ");
INSERT INTO t1 VALUES ("HELLO1 ", "HELLO1 ");
INSERT INTO t1 VALUES ("hello1", "hello1");
INSERT INTO t1 VALUES ("hello1 ", "hello1 ");
INSERT INTO t1 VALUES ("HELLO1", "HELLO1");
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a;
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "hello";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "HELLO";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "hello1 ";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "HELLO1 ";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " hello";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " HELLO";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " hello1 ";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " HELLO1 ";
--sorted_result
SELECT a, b, COUNT(*) FROM t1 GROUP BY a,b HAVING a = b;
# CREATE INDEX 
CREATE INDEX a ON t1(a);
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a;
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "hello";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "HELLO";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "hello1 ";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "HELLO1 ";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " hello";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " HELLO";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " hello1 ";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " HELLO1 ";
--sorted_result
SELECT a, b, COUNT(*) FROM t1 GROUP BY a,b HAVING a = b;
DROP TABLE t1;

# Bug #SEQUOIASQLMAINSTREAM-156
CREATE TABLE t1(a tinytext, b mediumtext, c text, d longtext) DEFAULT CHARSET=latin1 COLLATE=latin1_bin;
INSERT INTO t1 VALUES ("hello", "hello", "hello", "hello");
INSERT INTO t1 VALUES ("HELLO", "HELLO", "HELLO", "HELLO");
INSERT INTO t1 VALUES ("hello ", "hello ", "hello ", "hello ");
INSERT INTO t1 VALUES ("HELLO ", "HELLO ", "HELLO ", "HELLO ");
INSERT INTO t1 VALUES (" hello", " hello", " hello", " hello");
INSERT INTO t1 VALUES (" HELLO", " HELLO", " HELLO", " HELLO");
INSERT INTO t1 VALUES (" hello ", " hello ", " hello ", " hello ");
INSERT INTO t1 VALUES (" HELLO ", " HELLO ", " HELLO ", " HELLO ");
INSERT INTO t1 VALUES ("HELLO ", "HELLO ", "HELLO ", "HELLO ");
INSERT INTO t1 VALUES ("hello ", "hello ", "hello ", "hello ");
INSERT INTO t1 VALUES ("hello", "hello", "hello", "hello");
INSERT INTO t1 VALUES ("HELLO", "HELLO", "HELLO", "HELLO");
INSERT INTO t1 VALUES ("hello1", "hello1", "hello1", "hello1");
INSERT INTO t1 VALUES ("HELLO1", "HELLO1", "HELLO1", "HELLO1");
INSERT INTO t1 VALUES ("hello1 ", "hello1 ", "hello1 ", "hello1 ");
INSERT INTO t1 VALUES ("HELLO1 ", "HELLO1 ", "HELLO1 ", "HELLO1 ");
INSERT INTO t1 VALUES (" hello1", " hello1", " hello1", " hello1");
INSERT INTO t1 VALUES (" HELLO1", " HELLO1", " HELLO1", " HELLO1");
INSERT INTO t1 VALUES (" hello1 ", " hello1 ", " hello1 ", " hello1 ");
INSERT INTO t1 VALUES (" HELLO1 ", " HELLO1 ", " HELLO1 ", " HELLO1 ");
INSERT INTO t1 VALUES ("HELLO1 ", "HELLO1 ", "HELLO1 ", "HELLO1 ");
INSERT INTO t1 VALUES ("hello1", "hello1", "hello1", "hello1");
INSERT INTO t1 VALUES ("hello1 ", "hello1 ", "hello1 ", "hello1 ");
INSERT INTO t1 VALUES ("HELLO1", "HELLO1", "HELLO1", "HELLO1");
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a;
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "hello";
--sorted_result
SELECT b, COUNT(*) FROM t1 GROUP BY b HAVING b = "HELLO";
--sorted_result
SELECT c, COUNT(*) FROM t1 GROUP BY c HAVING c = "hello1 ";
--sorted_result
SELECT d, COUNT(*) FROM t1 GROUP BY d HAVING d = "HELLO1 ";
--sorted_result
SELECT d, COUNT(*) FROM t1 GROUP BY d HAVING d = " hello";
--sorted_result
SELECT c, COUNT(*) FROM t1 GROUP BY c HAVING c = " HELLO";
--sorted_result
SELECT b, COUNT(*) FROM t1 GROUP BY b HAVING b = " hello1 ";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " HELLO1 ";
--sorted_result
SELECT c, d, COUNT(*) FROM t1 GROUP BY c, d HAVING c = d;
# CREATE INDEX 
CREATE INDEX a ON t1(a(16));
CREATE INDEX b ON t1(b(16));
CREATE INDEX c ON t1(c(16));
CREATE INDEX d ON t1(d(16));
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a;
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = "hello";
--sorted_result
SELECT b, COUNT(*) FROM t1 GROUP BY b HAVING b = "HELLO";
--sorted_result
SELECT c, COUNT(*) FROM t1 GROUP BY c HAVING c = "hello1 ";
--sorted_result
SELECT d, COUNT(*) FROM t1 GROUP BY d HAVING d = "HELLO1 ";
--sorted_result
SELECT d, COUNT(*) FROM t1 GROUP BY d HAVING d = " hello";
--sorted_result
SELECT c, COUNT(*) FROM t1 GROUP BY c HAVING c = " HELLO";
--sorted_result
SELECT b, COUNT(*) FROM t1 GROUP BY b HAVING b = " hello1 ";
--sorted_result
SELECT a, COUNT(*) FROM t1 GROUP BY a HAVING a = " HELLO1 ";
--sorted_result
SELECT c, d, COUNT(*) FROM t1 GROUP BY c,d HAVING c = d;
DROP TABLE t1;

--source include/uninstall_sequoiadb.inc
